// Copyright (c) 2022 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./mod.d.ts" />
var r="function"==typeof Object.defineProperty?Object.defineProperty:null;var e=function(){try{return r({},"x",{}),!0}catch(r){return!1}},t=Object.defineProperty,n=Object.prototype,o=n.toString,a=n.__defineGetter__,i=n.__defineSetter__,u=n.__lookupGetter__,l=n.__lookupSetter__;var f=t,c=function(r,e,t){var f,c,_,p;if("object"!=typeof r||null===r||"[object Array]"===o.call(r))throw new TypeError("invalid argument. First argument must be an object. Value: `"+r+"`.");if("object"!=typeof t||null===t||"[object Array]"===o.call(t))throw new TypeError("invalid argument. Property descriptor must be an object. Value: `"+t+"`.");if((c="value"in t)&&(u.call(r,e)||l.call(r,e)?(f=r.__proto__,r.__proto__=n,delete r[e],r[e]=t.value,r.__proto__=f):r[e]=t.value),_="get"in t,p="set"in t,c&&(_||p))throw new Error("invalid argument. Cannot specify one or more accessors and a value or writable attribute in the property descriptor.");return _&&a&&a.call(r,e,t.get),p&&i&&i.call(r,e,t.set),r},_=e()?f:c;function p(r,e,t,n,o,a){var i,u,l,f;if(r<=0||0===e)return o;if(1===n&&1===a){if((l=r%4)>0)for(f=0;f<l;f++)o[f]+=e*t[f];if(r<4)return o;for(f=l;f<r;f+=4)o[f]+=e*t[f],o[f+1]+=e*t[f+1],o[f+2]+=e*t[f+2],o[f+3]+=e*t[f+3];return o}for(i=n<0?(1-r)*n:0,u=a<0?(1-r)*a:0,f=0;f<r;f++)o[u]+=e*t[i],i+=n,u+=a;return o}function b(r,e,t,n,o,a,i,u){var l,f,c,_;if(r<=0||0===e)return a;if(l=o,f=u,1===n&&1===i){if((c=r%4)>0)for(_=0;_<c;_++)a[f]+=e*t[l],l+=n,f+=i;if(r<4)return a;for(_=c;_<r;_+=4)a[f]+=e*t[l],a[f+1]+=e*t[l+1],a[f+2]+=e*t[l+2],a[f+3]+=e*t[l+3],l+=4,f+=4;return a}for(_=0;_<r;_++)a[f]+=e*t[l],l+=n,f+=i;return a}(function(r,e,t){_(r,e,{configurable:!1,enumerable:!1,writable:!1,value:t})})(p,"ndarray",b);export{p as default,b as ndarray};
//# sourceMappingURL=mod.js.map
